Python 3.7.4 (tags/v3.7.4:e09359112e, Jul  8 2019, 19:29:22) [MSC v.1916 32 bit (Intel)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> a = 123
>>> a = -178
>>> 1 = 0
  File "<stdin>", line 1
SyntaxError: can't assign to literal
>>> a = 0
>>> a = 1.2
>>> a = -3.45
>>> a = 4.24E10
>>> a = 4.24e10
>>> a = 4.24e-10
>>> a = 0o177
>>> a = 0x8ff
>>> a = 0xABC
>>> b = 0xABC
>>> b = 0xabc
>>> a = 3
>>> b = 4
>>> a+b
7
>>> a*b
12
>>> a/b
0.75
>>> a = 3
>>> b = 4
>>> a ** b
81
>>> 7 % 3
1
>>> 3 % 7
3
>>> 7 / 4
1.75
>>> 7 // 4
1
>>> 14 // 3
4
>>> 14 % 3
2
>>> "Life is too short, You need Python
  File "<stdin>", line 1
    "Life is too short, You need Python
                                      ^
SyntaxError: EOL while scanning string literal
>>> "Life is too short, You need Python"
'Life is too short, You need Python'
>>> "a"
'a'
>>> "123"
'123'
>>> " Hello World"
' Hello World'
>>> 'Python is fun'
'Python is fun'
>>> """Life is too short, You need python"""
'Life is too short, You need python'
>>> '''Life is too short, You need python'''
'Life is too short, You need python'
>>> food = "Python's favorite food is perl"
>>> food
"Python's favorite food is perl"
>>> food = 'Python's favorite food is perl'
  File "<stdin>", line 1
    food = 'Python's favorite food is perl'
                   ^
SyntaxError: invalid syntax
>>> "Python is very easy." he says.
  File "<stdin>", line 1
    "Python is very easy." he says.
                            ^
SyntaxError: invalid syntax
>>> say = '"Python is very easy." he says.'
>>> say
'"Python is very easy." he says.'
>>> say = "'Python is very easy.' he says."
>>> say
"'Python is very easy.' he says."
>>> food = 'Python\'s favorite fodd is perl.'
>>> say = "\"Python is very easy.\" he says."
>>> multiline = "Life is too short \nYou need python"
>>> multiline
'Life is too short \nYou need python'
>>> print(multiline)
Life is too short
You need python
>>> multiline = '''
... Life is too short
... You need python
... '''
>>> mutline
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'mutline' is not defined
>>> multiline
'\nLife is too short\nYou need python\n'
>>> print(multiline)

Life is too short
You need python

>>> multiline=""""
... Life is too short
... You need python"
... """
>>> print( multiline)
"
Life is too short
You need python"

>>> head = "Python"
>>> tail = " is fun!"
>>> head + tail
'Python is fun!'
>>> a = "Python"
>>> a * 2
'PythonPython'
>>> a = "Life is too short"
>>> len(a)
17
>>> a = "You nedd python"
>>> len(a)
15
>>> a = "Life is too short, You need Python
  File "<stdin>", line 1
    a = "Life is too short, You need Python
                                          ^
SyntaxError: EOL while scanning string literal
>>> a = "Life is too short, You need Python"
>>> a = "Life is too short, You need Python"
>>> a[3]
'e'
>>> a [0]
'L'
>>> a[1]
'i'
>>> a[1]
'i'
>>> a[2]
'f'
>>> a[3]
'e'
>>> a[4]
' '
>>> a[12
... ]
's'
>>> a[-1]
'n'
>>> a[0
... ]
'L'
>>> a[-1]
'n'
>>> a[-1]
'n'
>>> a[-0
... ]
'L'
>>> a[0]
'L'
>>> a[-2]
'o'
>>> a[-5]
'y'
>>> b = a[0]+a[1]+a[2]+a[3]
>>> b
'Life'
>>> a[0:4]
'Life'
>>> a[0:3]
'Lif'
>>> a[0:5]
'Life '
>>> a[0:2]
'Li'
>>> a[5:7]
'is'
>>> a[12:17]
'short'
>>> a[19:
... ]
'You need Python'
>>> a[:17]
'Life is too short'
>>> a[:]
'Life is too short, You need Python'
>>> a[19:-7}
  File "<stdin>", line 1
    a[19:-7}
           ^
SyntaxError: invalid syntax
>>> a[19:-7]
'You need'
>>> a = "20010331Rainy"
>>> date = a[:8]
>>> weather = a[8:]
>>> date
'20010331'
>>> weather
'Rainy'
>>> a = "20010331Rainy"
>>> year = a[:4]
>>> date = a[4:8]
>>> weather = a[8:]
>>> year
'2001'
>>> date
'0331'
>>> weather
'Rainy'
>>> a = "Pithon"
>>> a[1]
'i'
>>> a[1] = 'y'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: 'str' object does not support item assignment
>>> a = "Pithon"
>>> a[:1]
'P'
>>> a[2:]
'thon'
>>> a[:1]+'y'+a[2:=
  File "<stdin>", line 1
    a[:1]+'y'+a[2:=
                  ^
SyntaxError: invalid syntax
>>> a[:1]+'y'+a[2:]
'Python'
>>> "I eat %d apples." %3
'I eat 3 apples.'
>>> "I eat %s apples."% "five"
'I eat five apples.'
>>> number = 3
>>> "I eat %d apples." %number
'I eat 3 apples.'
>>> number = 10
>>> day = "three"
>>> "I ate %d apples. so I was sick for %s days."%(number,day)
'I ate 10 apples. so I was sick for three days.'
>>> "I have %s apples" %3
'I have 3 apples'
>>> "rate is %s" %3.234
'rate is 3.234'
>>> "Error is %d%." %98
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: incomplete format
>>> "Error is %d%%." %98
'Error is 98%.'
>>> "%10s" % "hi"
'        hi'
>>> "%-10sjane" % 'hi'
'hi        jane'
>>> "%0.4f" % 3.42134234
'3.4213'
>>> "%10.4f" % 3.42134234
'    3.4213'
>>> "I eat {0} apples." format(3)
  File "<stdin>", line 1
    "I eat {0} apples." format(3)
                             ^
SyntaxError: invalid syntax
>>> "I eat {0} apples.".format(3)
'I eat 3 apples.'
>>> "I eat {0} apples.".format("three")
'I eat three apples.'
>>> "I eat {0} apples.".format(three)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'three' is not defined
>>> number = 3
>>> "I eat {0} apples.".format(number)
'I eat 3 apples.'
>>> number = 10
>>> day = "three"
>>> "I ate {0} apples. so I was so sick for {1} days.".format(number,day)
'I ate 10 apples. so I was so sick for three days.'
>>>
>>> "I ate {number} apples. so I was sick for {day} days.".format(number=10,day=3)
'I ate 10 apples. so I was sick for 3 days.'
>>> "I ate {0} apples. so I was sick for {day} days.".format(10,day=3)
'I ate 10 apples. so I was sick for 3 days.'
>>>
>>> "{0:<10}".format("hi")
'hi        '
>>> "{0:>10}".format("hi")
'        hi'
>>> "{0:^10}".format("hi")
'    hi    '
>>> "{0:=^10}".format("hi")
'====hi===='
>>> "{0:!^10}".format("hi")
'!!!!hi!!!!'
>>> "{0:!<10}".format("hi")
'hi!!!!!!!!'
>>> y = 3.42134234
>>> "{0:0.4f}".format(y)
'3.4213'
>>> a = "{0:0.4f}".format(y)
>>> type(a)
<class 'str'>
>>> a
'3.4213'
>>> {0:0.4f}.format(y)
  File "<stdin>", line 1
    {0:0.4f}.format(y)
          ^
SyntaxError: invalid syntax
>>> "{0:10.4f}".format(y)
'    3.4213'
>>> "{{and}}".format()
'{and}'
>>> name = '홍길동'
>>> age = 30
>>> f'나의 이름은 {name}입니다. 나이는 {age}입니다.'
'나의 이름은 홍길동입니다. 나이는 30입니다.'
>>> a = input("당신은 누구입니까? ")
당신은 누구입니까? 박지은
>>> a
'박지은'
>>> age = 30
>>> f'나는 내년이면 {age+1}살이 된다.'
'나는 내년이면 31살이 된다.'
>>> d = {'name':'홍길동','age':30}
>>> f'나의 이름은 {d["name"]}입니다. 나이는 {d["age"]}입니다.'
'나의 이름은 홍길동입니다. 나이는 30입니다.'
>>> f'나의 이름은 {d['name']}입니다. 나이는 {d['age']}입니다.'
  File "<stdin>", line 1
    f'나의 이름은 {d['name']}입니다. 나이는 {d['age']}입니다.'
                    ^
SyntaxError: invalid syntax
>>> f'{"hi":<10}'
'hi        '
>>> f'{"hi":>10}'
'        hi'
>>> f'{"hi":^10}'
'    hi    '
>>> f'{"hi":=^10}'
'====hi===='
>>> f'{"hi":!^10}'
'!!!!hi!!!!'
>>> Y = 3.42134234
>>> y = 3.42134234
>>> f'{y:0.4f}'
'3.4213'
>>> f'{y:10.4f}'
'    3.4213'
>>> f'{{and}}'
'{and}'
>>> f'{"python":!^12}'
'!!!python!!!'
>>> {0:!^12}.format("python")
  File "<stdin>", line 1
    {0:!^12}.format("python")
       ^
SyntaxError: invalid syntax
>>> "{0:!^12}".format("python")
'!!!python!!!'
>>> a = "hobby"
>>> a.count('b')
2
>>> a = "Python is the best choice"
>>> a.find('b')
14
>>> a.find('k')
-1
>>> a = "Life is too short"
>>> a.index('t')
8
>>> a.index('k')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: substring not found
>>> ",".join('abcd')
'a,b,c,d'
>>> ",".join
<built-in method join of str object at 0x02FA0960>
>>> ",".join("abcd")
'a,b,c,d'
>>> ",".join(['a','b','c','d'])
'a,b,c,d'
>>> a = "hi"
>>> a.upper()
'HI'
>>> a = "HI"
>>> a.lower()
'hi'
>>> a = " hi "
>>> a.lstrip()
'hi '
>>> a = "hi "
>>> a.rstrip()
'hi'
>>> a = " hi "
>>> a.strip()
'hi'
>>> a = "Life is too short"
>>> a.replace("Life","Your leg")
'Your leg is too short'
>>> a = "Life is too short"
>>> a.split()
['Life', 'is', 'too', 'short']
>>> b = "a:b:c:d"
>>> b
'a:b:c:d'
>>> b.split(':')
['a', 'b', 'c', 'd']

>>> odd =[1,3,5,7,9]
>>> a = []
>>> b = [1,2,3]
>>> c = ['Life','is','so','short']
>>> d = [1,2,'Life','is']
>>> e = [1,2, ['Life','is']]
>>> a = [1,2,3]
>>> a
[1, 2, 3]
>>> a[0]
1
>>> a[0]+a[2]
4
>>> a[-1]
3
>>> a = [1,2,3,[1,2,3]]
>>> a[0]
1
>>> a[-1]
[1, 2, 3]
>>> a[3]
[1, 2, 3]
>>> a[-1][1]
2
>>> a[-1][0]
1
>>> a[-1][1]
2
>>> a[-1][2]
3
>>> a = [1,2,['a','b',['Life','is']]]
>>> a[2][2][0
...
... ]
'Life'
>>> a = [1,2,3,4,5]
>>> a[0:2]
[1, 2]
>>> a = "12345"
>>> a[0:2]
'12'
>>> a = [1,2,3,4,5]
>>> b = [:2]
  File "<stdin>", line 1
    b = [:2]
         ^
SyntaxError: invalid syntax
>>> b = a[:2]
>>> c = a[2:]
>>> b
[1, 2]
>>> c
[3, 4, 5]
>>> A = [1,2,3,4,5]
>>> result = A[1:3]
>>> result
[2, 3]
>>> a = [1,2,3,['a','b','c'],4,5]
>>> a[2:5]
[3, ['a', 'b', 'c'], 4]
>>> a[3][:2]
['a', 'b']
>>> a = [1,2,3]
>>> b = [4,5,6]
>>> a+b
[1, 2, 3, 4, 5, 6]
>>> a = [1,2,3]
>>> a*3
[1, 2, 3, 1, 2, 3, 1, 2, 3]
>>> a = [1,2,3]
>>> len(a)
3
>>> a = [1,2,3]
>>> a[2] + "hi"
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: unsupported operand type(s) for +: 'int' and 'str'
>>> str(a[2]) +"hi"
'3hi'
>>> a = [1,2,3]
>>> a[2] = 4
>>> a
[1, 2, 4]
>>> a = "Python"
>>> a.replace('t','h')
'Pyhhon'
>>> a = [1,2,3]
>>> del a[1]
>>> a
[1, 3]
>>> a = [1,2,3,4,5]
>>> del a[2:]
>>> a
[1, 2]
>>> a = [1,2,3]
>>> a.append(4)
>>> a
[1, 2, 3, 4]
>>> a.append([5,6])
>>> a
[1, 2, 3, 4, [5, 6]]
>>> a = [1,4,3,2]
>>> a.sort()
>>> a
[1, 2, 3, 4]
>>> a = ['a','c','b']
>>> a.sort()
>>> a
['a', 'b', 'c']
>>> a = ['a','c','b']
>>> a.reverse()
>>> a
['b', 'c', 'a']
>>> a = [1,2,3]
>>> a.index(3)
2
>>> a.index(2)
1
>>> a.index(0)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: 0 is not in list
>>> a = [1,2,3]
>>> a.insert(0,4)
>>> a
[4, 1, 2, 3]
>>> a.insert(3,5)
>>> a
[4, 1, 2, 5, 3]
>>> a = [1,2,3,1,2,3]
>>> a.remove(3)
>>> a
[1, 2, 1, 2, 3]
>>> a.remove(3)
>>> a
[1, 2, 1, 2]
>>> a = [1,2,3]
>>> a.pop()
3
>>> a
[1, 2]
>>> a = [1,2,3]
>>> a.pop(2)
3
>>> a
[1, 2]
>>> a = [1,2,3]
>>> a.count(1)
1
>>> a = [1,2,[1,2,3]]
>>> a.count(1)
1
>>> a = [1,2,3]
>>> a.extend([4,5])
>>> a
[1, 2, 3, 4, 5]
>>> a = [1,2,3]
>>> a.extend(4,5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: extend() takes exactly one argument (2 given)
>>> a.append(4,5)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: append() takes exactly one argument (2 given)
>>> a
[1, 2, 3]
>>> a.extend([4,5]_
  File "<stdin>", line 1
    a.extend([4,5]_
                  ^
SyntaxError: invalid syntax
>>> a.extend([4,5])
>>> a
[1, 2, 3, 4, 5]
>>> b = [6,7]
>>> a.extend(b)
>>> a
[1, 2, 3, 4, 5, 6, 7]
>>> a += [4,5]
>>> a
[1, 2, 3, 4, 5, 6, 7, 4, 5]
